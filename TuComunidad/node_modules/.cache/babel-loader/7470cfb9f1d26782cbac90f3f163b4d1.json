{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KhowjaAlim\\\\Downloads\\\\TuComunidad\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../assets/styles/login.css\";\nimport LoginService from \"../services/LoginService\";\nimport { BrowserRouter, Link, Route, Router, Routes } from \"react-router-dom\";\nimport { authenticate, authFailure, authSuccess } from \"../redux/authActions\";\nimport User from \"./User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  loading,\n  error,\n  ...props\n}) => {\n  _s();\n\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [loginBy, setLoginBy] = useState(\"manager\");\n\n  const handleSubmit = event => {\n    // const history = this.useHistory();\n    //Prevent page reload\n    event.preventDefault();\n    const {\n      uname,\n      pass\n    } = document.forms[0];\n    LoginService.login(uname.value, pass.value, loginBy).then(response => {\n      if (response.data == null || response.data == '') {\n        setErrorMessages({\n          name: \"error\",\n          message: response.data\n        });\n      } else {\n        debugger; // response.data.map((res)=>{\n\n        localStorage.setItem(\"id\", response.data.id);\n        localStorage.setItem(\"name\", response.data.name);\n        localStorage.setItem(\"loginBy\", loginBy); // });\n\n        window.location.href = '/dashboard';\n      }\n    }); // // Find user login info\n    // const userData = database.find((user) => user.username === uname.value);\n    //\n    // // Compare user info\n    // if (userData) {\n    //     if (userData.password !== pass.value) {\n    //         // Invalid password\n    //         setErrorMessages({ name: \"pass\", message: errors.pass });\n    //     } else {\n    //         setIsSubmitted(true);\n    //     }\n    // } else {\n    //     // Username not found\n    //     setErrorMessages({ name: \"uname\", message: errors.uname });\n    // }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setLoginBy(value);\n  };\n\n  const registerationForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row header\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user\",\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [renderErrorMessage(\"error\"), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-field\",\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-field\",\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Login By \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"manager\",\n            children: \"Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"neighbour\",\n            children: \"Neighbour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [registerationForm, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 50\n      },\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 32\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"0c2B/z1VemlDihCPj0A2pmoyaA8=\");\n\n_c = Login;\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  console.log(\"state \", auth);\n  return {\n    loading: auth.loading,\n    error: auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticate: () => dispatch(authenticate()),\n    setUser: data => dispatch(authSuccess(data)),\n    loginFailure: message => dispatch(authFailure(message))\n  };\n};\n\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/KhowjaAlim/Downloads/TuComunidad/src/Components/Login.js"],"names":["React","useState","LoginService","BrowserRouter","Link","Route","Router","Routes","authenticate","authFailure","authSuccess","User","Login","loading","error","props","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","loginBy","setLoginBy","handleSubmit","event","preventDefault","uname","pass","document","forms","login","value","then","response","data","name","message","localStorage","setItem","id","window","location","href","renderErrorMessage","handleChange","target","registerationForm","renderForm","width","mapStateToProps","auth","console","log","mapDispatchToProps","dispatch","setUser","loginFailure"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"../assets/styles/login.css\";\r\nimport LoginService from \"../services/LoginService\";\r\nimport {\r\n    BrowserRouter, Link,\r\n    Route, Router,\r\n    Routes\r\n} from \"react-router-dom\";\r\nimport {authenticate, authFailure, authSuccess} from \"../redux/authActions\";\r\nimport User from \"./User\";\r\n\r\n\r\n\r\nconst Login=({loading,error,...props})=>{\r\n    // React States\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [loginBy, setLoginBy] = useState(\"manager\");\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n       // const history = this.useHistory();\r\n        //Prevent page reload\r\n        event.preventDefault();\r\n        const {uname, pass} = document.forms[0];\r\n        LoginService.login(uname.value, pass.value, loginBy)\r\n            .then((response) => {\r\n                if(response.data == null || response.data == '') {\r\n                    setErrorMessages({ name: \"error\", message: response.data });\r\n                } else {\r\n                    debugger\r\n                   // response.data.map((res)=>{\r\n                        localStorage.setItem(\"id\", response.data.id)\r\n                        localStorage.setItem(\"name\", response.data.name)\r\n                        localStorage.setItem(\"loginBy\", loginBy)\r\n                   // });\r\n                    window.location.href = '/dashboard'\r\n                }\r\n            });\r\n        // // Find user login info\r\n        // const userData = database.find((user) => user.username === uname.value);\r\n        //\r\n        // // Compare user info\r\n        // if (userData) {\r\n        //     if (userData.password !== pass.value) {\r\n        //         // Invalid password\r\n        //         setErrorMessages({ name: \"pass\", message: errors.pass });\r\n        //     } else {\r\n        //         setIsSubmitted(true);\r\n        //     }\r\n        // } else {\r\n        //     // Username not found\r\n        //     setErrorMessages({ name: \"uname\", message: errors.uname });\r\n        // }\r\n    };\r\n\r\n    // Generate JSX code for error message\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    const handleChange = (event) => {\r\n        const value = event.target.value\r\n        setLoginBy(value)\r\n    };\r\n\r\n    const registerationForm = (\r\n        <div className='container'>\r\n            <div className='row header'>\r\n                <nav>\r\n                    <Link to=\"/user\">Register</Link>\r\n                </nav>\r\n            </div>\r\n\r\n            <Routes>\r\n                <Route path=\"/user\" element={<User />} />\r\n            </Routes>\r\n        </div>\r\n    );\r\n\r\n    // JSX code for login form\r\n    const renderForm = (\r\n\r\n        <div className=\"form\">\r\n            {renderErrorMessage(\"error\")}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input className=\"login-field\" type=\"text\" name=\"uname\" required />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input className=\"login-field\" type=\"password\" name=\"pass\" required />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Login By </label>\r\n                    <select onChange={handleChange}>\r\n                        <option selected value=\"manager\">Manager</option>\r\n                        <option value=\"neighbour\">Neighbour</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n\r\n        <div className=\"app\">\r\n            {registerationForm}\r\n            <div style={{width: 50}} className=\"login-form\">\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps=({auth})=>{\r\n    console.log(\"state \",auth)\r\n    return {\r\n        loading:auth.loading,\r\n        error:auth.error\r\n    }}\r\n\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\r\n    return {\r\n        authenticate :()=> dispatch(authenticate()),\r\n        setUser:(data)=> dispatch(authSuccess(data)),\r\n        loginFailure:(message)=>dispatch(authFailure(message))\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}