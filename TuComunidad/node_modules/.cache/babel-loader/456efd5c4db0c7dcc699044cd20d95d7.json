{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KhowjaAlim\\\\Downloads\\\\TuComunidad\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../assets/styles/login.css\";\nimport LoginService from \"../services/LoginService\";\nimport { Redirect } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport { connect } from 'react-redux';\nimport { authenticate, authFailure, authSuccess } from \"../redux/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  loading,\n  error,\n  ...props\n}) => {\n  _s();\n\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [loginBy, setLoginBy] = useState(\"manager\");\n\n  const handleSubmit = event => {\n    // const history = this.useHistory();\n    //Prevent page reload\n    event.preventDefault();\n    const {\n      uname,\n      pass\n    } = document.forms[0];\n    LoginService.login(uname.value, pass.value, loginBy).then(response => {\n      if (response.data != \"success\") {\n        setErrorMessages({\n          name: \"error\",\n          message: response.data\n        });\n      } else {\n        props.history.push('/dashboard'); // console.log(this.props)\n        // this.props.history.push(\"/dashboard\");\n      } //  alert(response.data)\n\n    }); // // Find user login info\n    // const userData = database.find((user) => user.username === uname.value);\n    //\n    // // Compare user info\n    // if (userData) {\n    //     if (userData.password !== pass.value) {\n    //         // Invalid password\n    //         setErrorMessages({ name: \"pass\", message: errors.pass });\n    //     } else {\n    //         setIsSubmitted(true);\n    //     }\n    // } else {\n    //     // Username not found\n    //     setErrorMessages({ name: \"uname\", message: errors.uname });\n    // }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setLoginBy(value);\n  }; // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [renderErrorMessage(\"error\"), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Login By \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"manager\",\n            children: \"Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"neighbour\",\n            children: \"Neighbour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 32\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"0c2B/z1VemlDihCPj0A2pmoyaA8=\");\n\n_c = Login;\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  console.log(\"state \", auth);\n  return {\n    loading: auth.loading,\n    error: auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticate: () => dispatch(authenticate()),\n    setUser: data => dispatch(authSuccess(data)),\n    loginFailure: message => dispatch(authFailure(message))\n  };\n};\n\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/KhowjaAlim/Downloads/TuComunidad/src/Components/Login.js"],"names":["React","useState","LoginService","Redirect","Dashboard","connect","authenticate","authFailure","authSuccess","Login","loading","error","props","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","loginBy","setLoginBy","handleSubmit","event","preventDefault","uname","pass","document","forms","login","value","then","response","data","name","message","history","push","renderErrorMessage","handleChange","target","renderForm","mapStateToProps","auth","console","log","mapDispatchToProps","dispatch","setUser","loginFailure"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"../assets/styles/login.css\";\r\nimport LoginService from \"../services/LoginService\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Dashboard from \"./Dashboard\";\r\nimport { connect } from 'react-redux';\r\nimport {authenticate, authFailure, authSuccess} from \"../redux/authActions\";\r\n\r\n\r\n\r\nconst Login=({loading,error,...props})=>{\r\n    // React States\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [loginBy, setLoginBy] = useState(\"manager\");\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n       // const history = this.useHistory();\r\n        //Prevent page reload\r\n        event.preventDefault();\r\n        const {uname, pass} = document.forms[0];\r\n        LoginService.login(uname.value, pass.value, loginBy)\r\n            .then((response) => {\r\n                if(response.data != \"success\") {\r\n                    setErrorMessages({ name: \"error\", message: response.data });\r\n                } else {\r\n                    props.history.push('/dashboard');\r\n                    // console.log(this.props)\r\n                    // this.props.history.push(\"/dashboard\");\r\n                }\r\n              //  alert(response.data)\r\n            });\r\n        // // Find user login info\r\n        // const userData = database.find((user) => user.username === uname.value);\r\n        //\r\n        // // Compare user info\r\n        // if (userData) {\r\n        //     if (userData.password !== pass.value) {\r\n        //         // Invalid password\r\n        //         setErrorMessages({ name: \"pass\", message: errors.pass });\r\n        //     } else {\r\n        //         setIsSubmitted(true);\r\n        //     }\r\n        // } else {\r\n        //     // Username not found\r\n        //     setErrorMessages({ name: \"uname\", message: errors.uname });\r\n        // }\r\n    };\r\n\r\n    // Generate JSX code for error message\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    const handleChange = (event) => {\r\n        const value = event.target.value\r\n        setLoginBy(value)\r\n    };\r\n\r\n    // JSX code for login form\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            {renderErrorMessage(\"error\")}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\" name=\"uname\" required />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\" name=\"pass\" required />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Login By </label>\r\n                    <select onChange={handleChange}>\r\n                        <option selected value=\"manager\">Manager</option>\r\n                        <option value=\"neighbour\">Neighbour</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"login-form\">\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps=({auth})=>{\r\n    console.log(\"state \",auth)\r\n    return {\r\n        loading:auth.loading,\r\n        error:auth.error\r\n    }}\r\n\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\r\n    return {\r\n        authenticate :()=> dispatch(authenticate()),\r\n        setUser:(data)=> dispatch(authSuccess(data)),\r\n        loginFailure:(message)=>dispatch(authFailure(message))\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}